# This playbook is self contained with its own default variables, but the default variables (vars.yml) can be overidden at your own /secrets/overrides/ansible/collections/firehawkvfx/houdini/vars/main.yml

# This script will query the latest daily or production build with side fx and install it.
# if the file exists in s3, it will be downloaded and installed.  aws cli must be configured with a key that has permission to access s3.
# Do not install the cli on cloud nodes with aws account root permissions!  A seperate user / key with the minimum s3 permissions required is recommended.

# If the file doesn't exist in the s3 bucket, it will be downloaded from side fx, and then pushed to the bucket after install.

# Example install on an aws instance
# ansible-playbook -i ansible/inventory ansible/collections/ansible_collections/firehawkvfx/houdini/houdini_module.yaml -v --extra-vars "variable_host=role_workstation_centos hostname=cloud_workstation1.firehawkvfx.com"
# Example local install on a RHEL 7.6 / CENTOS workstation / render node.
# ansible-playbook -i ansible/inventory ansible/collections/ansible_collections/firehawkvfx/houdini/houdini_module.yaml -v --extra-vars "variable_host=workstation1 variable_user=deadlineuser hostname=workstation1 ansible_become_pass=sompass"

- hosts: "{{ variable_host | default('role_node_centos') }}"
  remote_user: "{{ variable_connect_as_user | default('deadlineuser') }}"
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  # become: true

  vars:
    ansible_become_pass: "{{ user_deadlineuser_pw }}"
    secrets_path: "{{ playbook_dir }}" # if not defined, retarget to this path.  This allows local installs (not cloud) to inherit user prefs.
    vars_files_locs: [ "/{{ secrets_path }}/overrides/ansible/collections/ansible_collections/firehawkvfx/houdini/vars/main.yml", "{{ playbook_dir }}/vars/main.yml" ] # The first file found will be used, allowing the one in your secrets location to override defaults.

  tasks:
  - name: test vars_files_locs
    debug:
      var: vars_files_locs
    tags: always

  - name: aquire vars from secrets path before using defaults for softnas hosts 1
    include_vars: "{{ item }}"
    with_first_found: "{{ vars_files_locs }}"
    tags:
    - always

  - name: test connection
    debug:
      msg: "connection established"

### Houdini Install

- hosts: "{{ variable_host | default('role_node_centos') }}"
  remote_user: "{{ variable_connect_as_user | default('deadlineuser') }}"
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  # become: true

  vars:
    secrets_path: "{{ playbook_dir }}"
    vars_files_locs: [ "/{{ secrets_path }}/overrides/ansible/collections/ansible_collections/firehawkvfx/houdini/vars/main.yml", "{{ playbook_dir }}/vars/main.yml" ] # The first file found will be used, allowing the one in your secrets location to override defaults.
    variable_user: "deadlineuser"
    houdini_install_type: 'node' # type can be node or server
    houdini_major_version_list: "{{ houdini_version_list | map(attribute='houdini_major_version') }}"
    # ansible_python_interpreter: "/usr/bin/python3.11"  # this will affect the localhost which could be an issue if not installed
  # vars_files:
  #   - /deployuser/ansible/group_vars/all/vars

  tasks:
  - name: aquire vars from secrets path before using defaults
    include_vars: "{{ item }}"
    with_first_found: "{{ vars_files_locs }}"
    tags:
    - always

  - name: Install Houdini
    include_role:
      name: houdini_role
      apply:
        tags:
          - install_houdini
    tags: always

  - name: Configure Hserver
    include_role:
      name: set_hserver_role
      apply:
        tags:
          - set_hserver
    tags: always

  #  Disabled because of migration to Deadline Cloud.
  # - name: Install Deadline
  #   include_role:
  #     name: configure_deadline_houdini_role
  #     apply:
  #       tags:
  #         - install_deadline_db
  #   tags: always
